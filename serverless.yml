service: cmr-cms

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-plugin-inject-dependencies
  - serverless-plugin-warmup

package:
  individually: true

custom:
  cognitoPool: ${opt:cognitopool}
  warmup:
    prewarm: true
    schedule: 'rate(14 minutes)'

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30
  environment:
    host: ${opt:host}
    pass: ${opt:pass}
    user: ${opt:user}
  vpc:
    securityGroupIds:
      - ${opt:securitygroup}
    subnetIds:
      - ${opt:subnetid1}
      - ${opt:subnetid2}
      - ${opt:subnetid3}

functions:
  pageGet:
    handler: scripts/lambda/page.httpGET
    warmup: true
    events:
      - http:
          path: /path/{slug+}
          method: get
          cors: true
  pagesGet:
    handler: scripts/lambda/page.httpGETALL
    warmup: true
    events:
      - http:
          path: /path
          method: get
          cors: true

  pagePOST:
    handler: scripts/lambda/page.httpPOST
    warmup: true
    events:
      - http:
          path: /page
          method: post
          cors: true
          authorizer:
            type: AWS_IAM
  pagePUT:
    handler: scripts/lambda/page.httpPUT
    warmup: true
    events:
      - http:
          path: /page/{pageId}
          method: put
          cors: true
          authorizer:
            type: AWS_IAM
  pageDELETE:
    handler: scripts/lambda/page.httpDELETE
    warmup: true
    events:
      - http:
          path: /page/{pageId}
          method: delete
          cors: true
          authorizer:
            type: AWS_IAM
  contentGETALL:
    handler: scripts/lambda/contentCRUD.httpGETTable
    warmup: true
    events:
      - http:
          path: /{table}
          method: get
          cors: true
          authorizer:
            type: AWS_IAM
  contentPOST:
    handler: scripts/lambda/contentCRUD.httpPOST
    warmup: true
    events:
      - http:
          path: /{table}
          method: post
          cors: true
          authorizer:
            type: AWS_IAM
  contentDELETE:
    handler: scripts/lambda/contentCRUD.httpDELETE
    warmup: true
    events:
      - http:
          path: /{table}/{id}
          method: delete
          cors: true
          authorizer:
            type: AWS_IAM
  contentPUT:
    handler: scripts/lambda/contentCRUD.httpPUT
    warmup: true
    events:
      - http:
          path: /{table}/{id}
          method: put
          cors: true
          authorizer:
            type: AWS_IAM
